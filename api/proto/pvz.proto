syntax = "proto3";

package pvz.v1;

option go_package = "api/proto/gen/pvz_v1;pvz_v1";

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";


option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  host: "localhost:6060";
  schemes: HTTP;
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
};

service PVZService {
  rpc GetPVZList(GetPVZListRequest) returns (GetPVZListResponse) {
    option (google.api.http) = {
      get: "/api/v1/pvz"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Получение списка пунктов выдачи";
      description: "Возвращает список всех зарегистрированных ПВЗ";
      tags: "PVZ";
      responses: {
        key: "200";
        value: {
          description: "Успешный ответ со списком ПВЗ";
          schema: {
            json_schema: {
              ref: ".pvz.v1.GetPVZListResponse";
            };
          };
        };
      };
      responses: {
        key: "500";
        value: {
          description: "Внутренняя ошибка сервера";
          schema: {
            json_schema: {
              ref: ".google.rpc.Status";
            };
          };
        };
      };
    };
  }
}
enum ReceptionStatus {
  RECEPTION_STATUS_IN_PROGRESS = 0;
  RECEPTION_STATUS_CLOSED = 1;
}

message GetPVZListRequest {}

message GetPVZListResponse {
  repeated PVZ pvzs = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Массив пунктов выдачи";
    }
  ];
}

message PVZ {
  string id = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Уникальный идентификатор ПВЗ";
      example: "\"550e8400-e29b-41d4-a716-446655440000\"";
    }
  ];
  
  google.protobuf.Timestamp registration_date = 2 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Дата регистрации ПВЗ";
      example: "\"2023-01-15T12:00:00Z\"";
    }
  ];
  
  string city = 3 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Город расположения";
      example: "\"Москва\"";
    }
  ];
}